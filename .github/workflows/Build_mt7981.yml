name: Build_mt7981_asr3000

on:
  workflow_dispatch:
    inputs:
      manual:
        description: '手动触发一次编译'
env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  CONFIG_FILE: 3.config
  DIY_P1_SH: diy/diy-5.15.sh
  DIY_P2_SH: diy-part4.sh
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai
  
# 定时触发编译
# schedule:
#   - cron: 17 22 * * 4

jobs:
  Build_mt7981:
    runs-on: ubuntu-20.04
    steps:
    - name: 检查项目分支
      uses: actions/checkout@v3
      
    - name: 释放磁盘空间
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai" 
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo -E apt-get update -y
        sudo -E apt-get install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3.8 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev libfuse-dev python3-setuptools
        #pip install aligo
        sudo -E apt-get clean
        #git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h
        
    - name: 下载固件源码
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
#        cd openwrt
#       cp -f ../diy/mt798x/op1.sh ./
#       chmod +x ./op1.sh && ./op1.sh

    - name: 安装并更新插件
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 更改设置（DIY2）
      run: |
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH        

#       cp -f ../diy/mt798x/op2.sh ./        
#       chmod +x ./op2.sh && ./op2.sh      
             
    - name: 加载.config
      run: |
        #[ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config#复制自定义config
        cp -f openwrt/defconfig/mt7981-ax3000.config openwrt/.config#复制默认config
        cd openwrt && make defconfig
        
    - name: 下载依赖
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 开始编译固件
      working-directory: ./openwrt
      run: |
        make -j$(nproc) V=s
        #echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 整理固件
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        # 整理固件包时候,删除您不想要的固件或者文件,让它不需要上传到Actions空间
        rm -rf packages
        rm -rf feeds.buildinfo
        rm -rf version.buildinfo
        rm -rf *kernel.bin
        rm -rf profiles.json
        rm -rf *rootfs.img
        rm -rf *.manifest
        rm -rf sha256sums
        
              
    - name: 上传固件到actions
      uses: actions/upload-artifact@main
      with:
        name: $(date +"%Y%m%d%H%M")
        #name: ${{ env.FILE_DATE }}
        path: openwrt/bin/targets/mediatek/mt7981/*.bin

#    - name: Upload config
#      uses: actions/upload-artifact@main
#      with:
#        name: config
#        path: openwrt/.config

#    - name: Upload Packages
#      uses: actions/upload-artifact@main
#      with:
#        name: Packages
#        path: openwrt/bin/packages
        
    - name: 改Tag
      id: generate_name
      run: |
        time=$(date +%Y%m%d%H%M%S)
        release_tag="$time"
        release_name="$(date +%Y%m%d)"
        echo "release_name=$release_name" >> $GITHUB_OUTPUT
        echo "release_tag=$release_tag" >> $GITHUB_OUTPUT      

    - name: 上传固件到Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: openwrt/bin/targets/mediatek/mt7981/*.bin
        name: ${{ steps.generate_name.outputs.release_name }}
        tag: ${{ steps.generate_name.outputs.release_tag }}
        token: ${{ secrets.GITHUB_TOKEN }}
        
#    - name: Upload Aliyun
#      run: |
#        cd ARM_Out
#        echo "请自动忽略META-INF文件夹。" > 忽略META-INF文件夹.txt
#        jar cf JCG-Q30Pro-5.4-$(date +%Y%m%d).zip *
#        cd ..    
#        python diy/aliupload.py --token "${{ secrets.ALIYUN_TOKEN }}" --uploadFloder "OpenWrt/MT798x/Q30Pro/5.4" --file "ARM_Out/JCG-Q30Pro-5.4-$(date +%Y%m%d).zip"  
